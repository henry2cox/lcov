#!/usr/bin/env perl

#   Copyright (c) MediaTek USA Inc., 2020
#
#   This program is free software;  you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or (at
#   your option) any later version.
#
#   This program is distributed in the hope that it will be useful, but
#   WITHOUT ANY WARRANTY;  without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#   General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program;  if not, see
#   <http://www.gnu.org/licenses/>.
#
#
# p4annotate
#
#   This script runs "p4 annotate" for the specified file and formats the result
#   to match the gendiffcov(1) age/ownership annotation specification.

#use strict;
use DateTime::Format::W3CDTF;
use POSIX qw(strftime);
use File::Basename;
my $pathname = shift @ARGV;

if ( -e $pathname && -l $pathname) {
  $pathname = File::Basename::dirname($pathname) . '/' . readlink($pathname);
  my @c;
  foreach my $component (split(m@/@, $pathname)) {
    next unless length($component);
    if ($component eq ".") { next; }
    if ($component eq "..") { pop @c; next }
    push @c, $component;
  }
  $pathname = join("/", @c);
}

if (0 == system("p4 files $pathname 2>/dev/null|grep -qv -- '- no such file' >/dev/null")) {
  # -i: follow history across branches
  # -I: follow history across integrations
  #     (seem to be able to use -i or -I - but not both, together)
  # -u: print user name
  # -c: print changelist rather than file version ID
  # -q: quiet - suppress the 1-line header for each line
  if (open(HANDLE, "-|", "p4 annotate -Iucq $pathname")) {
    while (my $line = <HANDLE>) {
      chomp $line;
      # Also remove CR from line-end
      s/\015$//;

      if ($line =~ m/([0-9]+):\s+(\S+)\s+([0-9\/]+)\s(.*)/) {
        my $changelist = $1;
        my $owner = $2;
        my $when = $3;
        my $text = $4;
        $owner =~ s/^.*<//;
        $owner =~ s/>.*$//;
        $when =~ s:/:-:g;
        $when =~ s/$/T00:00:00-05:00/;
        printf("%s|%s|%s|%s\n", $changelist, $owner, $when, $text);
      } else {
        printf("%s|%s|%s|%s\n", "NONE", "NONE", "NONE", $line);
      }
    }
  }
} else {
  my @stat = stat $pathname;
  my $tz = strftime("%z", localtime($stat[9]));
  $tz =~ s/([0-9][0-9])$/:\1/;
  my $mtime = strftime("%Y-%m-%dT%H:%M:%S", localtime($stat[9])) . $tz;
  if (open(HANDLE, $pathname)) {
    while (my $line = <HANDLE>) {
      chomp $line;
      # Also remove CR from line-end
      s/\015$//;

      printf("%s|%s|%s|%s\n", "NONE", "NONE", $mtime, $line);
    }
  }
}
